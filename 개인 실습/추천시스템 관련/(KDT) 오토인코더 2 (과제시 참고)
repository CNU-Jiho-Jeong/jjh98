{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"https://github.com/learn-programmers/programmers_kdt_II/blob/main/(KDT)_%EC%82%AC%EC%9A%A9%EC%9E%90_%EA%B8%B0%EB%B0%98_%ED%98%91%EC%97%85_%ED%95%84%ED%84%B0%EB%A7%81_%EC%B6%94%EC%B2%9C.ipynb","timestamp":1662096384259}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","source":["# 오토인코더 기반으로 딥러닝 모델 만들기"],"metadata":{"id":"XqvvN5Z9cirz"}},{"cell_type":"code","metadata":{"id":"e4jdjZN254pO","executionInfo":{"status":"ok","timestamp":1662256189913,"user_tz":-540,"elapsed":3053,"user":{"displayName":"정지호","userId":"16891067989582209865"}}},"source":["\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import os\n","\n","from keras.layers import Input, Embedding, Flatten, Dot, Dense\n","from keras.models import Model\n","\n","# keras 에는 임베딩이라는 레이어가 있기 때문에, 이를 써서 데이터의 차원을 축소해보자.(굳이 인코더를 작성할 필요가 없다.) "],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"X9m_UFiBnx6m","executionInfo":{"status":"ok","timestamp":1662256193971,"user_tz":-540,"elapsed":2583,"user":{"displayName":"정지호","userId":"16891067989582209865"}}},"source":["ratings = pd.read_csv(\"https://grepp-reco-test.s3.ap-northeast-2.amazonaws.com/movielens/ratings.csv\")"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"K82Avgs3pHAe","outputId":"2dc0df07-76f6-42b0-ecdc-b8300727f5f9","executionInfo":{"status":"ok","timestamp":1662256195519,"user_tz":-540,"elapsed":512,"user":{"displayName":"정지호","userId":"16891067989582209865"}}},"source":["ratings.head()"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   userId  movieId  rating   timestamp\n","0       1       31     2.5  1260759144\n","1       1     1029     3.0  1260759179\n","2       1     1061     3.0  1260759182\n","3       1     1129     2.0  1260759185\n","4       1     1172     4.0  1260759205"],"text/html":["\n","  <div id=\"df-f78b53b0-497f-49e7-aca0-e7da6bdfe6f1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>userId</th>\n","      <th>movieId</th>\n","      <th>rating</th>\n","      <th>timestamp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>31</td>\n","      <td>2.5</td>\n","      <td>1260759144</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1029</td>\n","      <td>3.0</td>\n","      <td>1260759179</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>1061</td>\n","      <td>3.0</td>\n","      <td>1260759182</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1129</td>\n","      <td>2.0</td>\n","      <td>1260759185</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>1172</td>\n","      <td>4.0</td>\n","      <td>1260759205</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f78b53b0-497f-49e7-aca0-e7da6bdfe6f1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f78b53b0-497f-49e7-aca0-e7da6bdfe6f1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f78b53b0-497f-49e7-aca0-e7da6bdfe6f1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"90izVbp0pcO1","outputId":"ab557175-9a2d-4540-e59e-2a307e5f8553","executionInfo":{"status":"ok","timestamp":1662256197035,"user_tz":-540,"elapsed":322,"user":{"displayName":"정지호","userId":"16891067989582209865"}}},"source":["ratings.shape"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(100004, 4)"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l8j8KQfwpeL4","outputId":"eade9e6a-c135-4a95-981c-aad4edde52a1","executionInfo":{"status":"ok","timestamp":1662256198380,"user_tz":-540,"elapsed":3,"user":{"displayName":"정지호","userId":"16891067989582209865"}}},"source":["users = len(ratings.userId.unique()) # 중복제거하고 유저아이디 개수\n","movies = len(ratings.movieId.unique()) # 중복 제거하고 영화아이디 개수\n","print(users, movies)\n","\n","# 유저아이디:671개 / 영화아이디:9066개"],"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["671 9066\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"_KvdXXgEpkYv","outputId":"6bb25da5-b53c-49af-c180-84e0f57ba2d2","executionInfo":{"status":"ok","timestamp":1662256200440,"user_tz":-540,"elapsed":317,"user":{"displayName":"정지호","userId":"16891067989582209865"}}},"source":["ratings.describe()\n","# userId 는 1번부터 671번까지 순차적으로 존재한다. (min==1, max==671, 총 671개)\n","# movieId 에는 중간에 빈 숫자들이 많다 (min==1 인데 max==163949. 총 9066개인데) => 중간에 빈 숫자들이 많으면 문제가 생길 수 있음 => 순차적인 데이터로 새로 배정한다."],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              userId        movieId         rating     timestamp\n","count  100004.000000  100004.000000  100004.000000  1.000040e+05\n","mean      347.011310   12548.664363       3.543608  1.129639e+09\n","std       195.163838   26369.198969       1.058064  1.916858e+08\n","min         1.000000       1.000000       0.500000  7.896520e+08\n","25%       182.000000    1028.000000       3.000000  9.658478e+08\n","50%       367.000000    2406.500000       4.000000  1.110422e+09\n","75%       520.000000    5418.000000       4.000000  1.296192e+09\n","max       671.000000  163949.000000       5.000000  1.476641e+09"],"text/html":["\n","  <div id=\"df-645a106e-f7b9-460f-a599-aef8b3927e06\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>userId</th>\n","      <th>movieId</th>\n","      <th>rating</th>\n","      <th>timestamp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>100004.000000</td>\n","      <td>100004.000000</td>\n","      <td>100004.000000</td>\n","      <td>1.000040e+05</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>347.011310</td>\n","      <td>12548.664363</td>\n","      <td>3.543608</td>\n","      <td>1.129639e+09</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>195.163838</td>\n","      <td>26369.198969</td>\n","      <td>1.058064</td>\n","      <td>1.916858e+08</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.500000</td>\n","      <td>7.896520e+08</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>182.000000</td>\n","      <td>1028.000000</td>\n","      <td>3.000000</td>\n","      <td>9.658478e+08</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>367.000000</td>\n","      <td>2406.500000</td>\n","      <td>4.000000</td>\n","      <td>1.110422e+09</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>520.000000</td>\n","      <td>5418.000000</td>\n","      <td>4.000000</td>\n","      <td>1.296192e+09</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>671.000000</td>\n","      <td>163949.000000</td>\n","      <td>5.000000</td>\n","      <td>1.476641e+09</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-645a106e-f7b9-460f-a599-aef8b3927e06')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-645a106e-f7b9-460f-a599-aef8b3927e06 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-645a106e-f7b9-460f-a599-aef8b3927e06');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"kB7TU_der9in","executionInfo":{"status":"ok","timestamp":1662256201985,"user_tz":-540,"elapsed":320,"user":{"displayName":"정지호","userId":"16891067989582209865"}}},"source":["movieId_to_seqId = {} # movieId를 일련번호로 매핑\n","seqId_to_movieId = {} # 일련번호를 moviId로 나타내줌\n","for sId, id in enumerate(ratings[\"movieId\"].unique()): # (인덱스(일련번호), 영화아이디) => sld==인덱스(일련번호) / id==영화아이디\n","  seqId_to_movieId[sId] = id\n","  movieId_to_seqId[id] = sId"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"id":"W3jXMRhKtIn4","executionInfo":{"status":"ok","timestamp":1662256205241,"user_tz":-540,"elapsed":1980,"user":{"displayName":"정지호","userId":"16891067989582209865"}}},"source":["def return_movieId_to_seqId(row): # movieId에 해당하는 일련번호 리턴\n","  return movieId_to_seqId[row.movieId]\n","\n","ratings[\"new_movieId\"] = ratings.apply(return_movieId_to_seqId, axis = 1)"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"GC70Vr6osj-4","outputId":"e4c6414d-e3f6-4262-dc51-c90bd2aa420a","executionInfo":{"status":"ok","timestamp":1662256206501,"user_tz":-540,"elapsed":4,"user":{"displayName":"정지호","userId":"16891067989582209865"}}},"source":["ratings.describe()\n","#new_movieId를 보면 0부터 9065까지 순차적으로 되어있는 것이 파악 가능하다(min==0/max==9065)"],"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              userId        movieId         rating     timestamp  \\\n","count  100004.000000  100004.000000  100004.000000  1.000040e+05   \n","mean      347.011310   12548.664363       3.543608  1.129639e+09   \n","std       195.163838   26369.198969       1.058064  1.916858e+08   \n","min         1.000000       1.000000       0.500000  7.896520e+08   \n","25%       182.000000    1028.000000       3.000000  9.658478e+08   \n","50%       367.000000    2406.500000       4.000000  1.110422e+09   \n","75%       520.000000    5418.000000       4.000000  1.296192e+09   \n","max       671.000000  163949.000000       5.000000  1.476641e+09   \n","\n","         new_movieId  \n","count  100004.000000  \n","mean     1660.778349  \n","std      1893.955817  \n","min         0.000000  \n","25%       327.000000  \n","50%       873.000000  \n","75%      2344.000000  \n","max      9065.000000  "],"text/html":["\n","  <div id=\"df-d5073a2d-f9bf-4502-89d3-741546a3f84b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>userId</th>\n","      <th>movieId</th>\n","      <th>rating</th>\n","      <th>timestamp</th>\n","      <th>new_movieId</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>100004.000000</td>\n","      <td>100004.000000</td>\n","      <td>100004.000000</td>\n","      <td>1.000040e+05</td>\n","      <td>100004.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>347.011310</td>\n","      <td>12548.664363</td>\n","      <td>3.543608</td>\n","      <td>1.129639e+09</td>\n","      <td>1660.778349</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>195.163838</td>\n","      <td>26369.198969</td>\n","      <td>1.058064</td>\n","      <td>1.916858e+08</td>\n","      <td>1893.955817</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.500000</td>\n","      <td>7.896520e+08</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>182.000000</td>\n","      <td>1028.000000</td>\n","      <td>3.000000</td>\n","      <td>9.658478e+08</td>\n","      <td>327.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>367.000000</td>\n","      <td>2406.500000</td>\n","      <td>4.000000</td>\n","      <td>1.110422e+09</td>\n","      <td>873.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>520.000000</td>\n","      <td>5418.000000</td>\n","      <td>4.000000</td>\n","      <td>1.296192e+09</td>\n","      <td>2344.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>671.000000</td>\n","      <td>163949.000000</td>\n","      <td>5.000000</td>\n","      <td>1.476641e+09</td>\n","      <td>9065.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d5073a2d-f9bf-4502-89d3-741546a3f84b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d5073a2d-f9bf-4502-89d3-741546a3f84b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d5073a2d-f9bf-4502-89d3-741546a3f84b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"N3Unz16vswiQ","executionInfo":{"status":"ok","timestamp":1662256208407,"user_tz":-540,"elapsed":318,"user":{"displayName":"정지호","userId":"16891067989582209865"}}},"source":["from sklearn.model_selection import train_test_split\n","train, test = train_test_split(ratings, test_size=0.2, random_state=42) # 20%가 test set, 80%가 train set"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"hGtlvkOltTug","outputId":"9ec8ce22-6349-46c0-ea57-1757b2d985b0","executionInfo":{"status":"ok","timestamp":1662256210748,"user_tz":-540,"elapsed":327,"user":{"displayName":"정지호","userId":"16891067989582209865"}}},"source":["train.head()"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       userId  movieId  rating   timestamp  new_movieId\n","37865     273     5816     4.5  1466946328          364\n","46342     339     2028     4.5  1446663181          113\n","64614     461     3895     0.5  1093224965         4626\n","41974     300     3578     4.5  1086010878          468\n","50236     369      292     3.0   847465462           48"],"text/html":["\n","  <div id=\"df-392df3b1-022d-4005-b4cb-070f8da84d57\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>userId</th>\n","      <th>movieId</th>\n","      <th>rating</th>\n","      <th>timestamp</th>\n","      <th>new_movieId</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>37865</th>\n","      <td>273</td>\n","      <td>5816</td>\n","      <td>4.5</td>\n","      <td>1466946328</td>\n","      <td>364</td>\n","    </tr>\n","    <tr>\n","      <th>46342</th>\n","      <td>339</td>\n","      <td>2028</td>\n","      <td>4.5</td>\n","      <td>1446663181</td>\n","      <td>113</td>\n","    </tr>\n","    <tr>\n","      <th>64614</th>\n","      <td>461</td>\n","      <td>3895</td>\n","      <td>0.5</td>\n","      <td>1093224965</td>\n","      <td>4626</td>\n","    </tr>\n","    <tr>\n","      <th>41974</th>\n","      <td>300</td>\n","      <td>3578</td>\n","      <td>4.5</td>\n","      <td>1086010878</td>\n","      <td>468</td>\n","    </tr>\n","    <tr>\n","      <th>50236</th>\n","      <td>369</td>\n","      <td>292</td>\n","      <td>3.0</td>\n","      <td>847465462</td>\n","      <td>48</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-392df3b1-022d-4005-b4cb-070f8da84d57')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-392df3b1-022d-4005-b4cb-070f8da84d57 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-392df3b1-022d-4005-b4cb-070f8da84d57');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"n9jnr3U0ta9T","executionInfo":{"status":"ok","timestamp":1662256212727,"user_tz":-540,"elapsed":436,"user":{"displayName":"정지호","userId":"16891067989582209865"}}},"source":["\"\"\" 영화 레이어 \"\"\" # 딥러닝 레이어\n","\n","movie_input = Input(shape=[1], name='Movies')\n","# Embedding(input_dim, output_dim)\n","# - input_dim: 단어의 수 (여기서는 영화의 수)\n","# - output_dim: 임베딩 레이어 출력 차원\n","movie_embedding = Embedding(movies+1, 5, name = 'Embedded_Movies')(movie_input) \n","# Embedding: 인코더라 보면 됨. 큰 정보에서 의미를 찾아서 작은 정보로 압축해 줌. \n","# Embedding 첫 번째 인자는 입력의 차원 수(위에서는 9067), 두 번째 인자는 출력의 차원 수(위에서는 5개의 차원). \n","movie_final = Flatten(name='Flatten_Movies')(movie_embedding)\n","# Flatten: dot product 계산을 위해 평탄화 해줌.(2차원->1차원)"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"id":"7KtT0h1ot-tY","executionInfo":{"status":"ok","timestamp":1662256489190,"user_tz":-540,"elapsed":339,"user":{"displayName":"정지호","userId":"16891067989582209865"}}},"source":["\"\"\" 사용자 레이어 \"\"\" # 딥러닝 레이어\n","\n","user_input = Input(shape=[1], name='Users')\n","user_embedding = Embedding(users+1, 5, name = 'Embedded_Users')(user_input)\n","# Embedding: 인코더라 보면 됨. 큰 정보에서 의미를 찾아서 작은 정보로 압축해 줌. \n","# Embedding 첫 번째 인자는 입력의 차원 수(위에서는 672), 두 번째 인자는 출력의 차원 수(위에서는 5개의 차원). \n","user_final = Flatten(name='Flatten_Users')(user_embedding)\n","# Flatten: dot product 계산을 위해 평탄화 해줌.(2차원->1차원)"],"execution_count":16,"outputs":[]},{"cell_type":"markdown","source":["# 두 개의 레이어(영화/사용자 레이어)가 평행하게 가다가 마지막에 합쳐져서 내적을 계산함으로써 평점을 예측"],"metadata":{"id":"6oeI1iSeS0gs"}},{"cell_type":"code","metadata":{"id":"Qgqvhe7ju28o","executionInfo":{"status":"ok","timestamp":1662256491528,"user_tz":-540,"elapsed":313,"user":{"displayName":"정지호","userId":"16891067989582209865"}}},"source":["\"\"\" 내적 레이어 \"\"\"\n","mult = Dot(name='Dot_Product', axes=1)([movie_final, user_final]) # movie final 과 user final을 내적"],"execution_count":17,"outputs":[]},{"cell_type":"code","metadata":{"id":"ThSh00GOu4LN","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1662256682498,"user_tz":-540,"elapsed":7,"user":{"displayName":"정지호","userId":"16891067989582209865"}},"outputId":"c4bd055e-da2d-486e-dd55-0fafd4a32018"},"source":["from keras.losses import mean_squared_error # 학습을 하기 위해 어떤 함수를 줄이려고 할 것인가\n","from keras import backend as K # 프레임워크에 명령을 주기 위해 필요. \n","\n","def root_mean_squared_error(y_true, y_pred): # RMSE를 따로 만든다.\n","  return K.sqrt(mean_squared_error(y_true, y_pred))\n","\n","model = Model([movie_input, user_input], mult)\n","model.compile(optimizer='adam', loss=root_mean_squared_error)\n","model.summary() # 어떻게 생긴 모델인지 파악 가능하다"],"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model\"\n","__________________________________________________________________________________________________\n"," Layer (type)                   Output Shape         Param #     Connected to                     \n","==================================================================================================\n"," Movies (InputLayer)            [(None, 1)]          0           []                               \n","                                                                                                  \n"," Users (InputLayer)             [(None, 1)]          0           []                               \n","                                                                                                  \n"," Embedded_Movies (Embedding)    (None, 1, 5)         45335       ['Movies[0][0]']                 \n","                                                                                                  \n"," Embedded_Users (Embedding)     (None, 1, 5)         3360        ['Users[0][0]']                  \n","                                                                                                  \n"," Flatten_Movies (Flatten)       (None, 5)            0           ['Embedded_Movies[0][0]']        \n","                                                                                                  \n"," Flatten_Users (Flatten)        (None, 5)            0           ['Embedded_Users[0][0]']         \n","                                                                                                  \n"," Dot_Product (Dot)              (None, 1)            0           ['Flatten_Movies[0][0]',         \n","                                                                  'Flatten_Users[0][0]']          \n","                                                                                                  \n","==================================================================================================\n","Total params: 48,695\n","Trainable params: 48,695\n","Non-trainable params: 0\n","__________________________________________________________________________________________________\n"]}]},{"cell_type":"code","source":["from keras.utils.vis_utils import plot_model\n","\n","plot_model(model, to_file='model_plot.png', show_shapes=True, show_layer_names=True) \n","# 왼쪽이 영화 정보 처리 과정\n","# 오른쪽이 사용자 정보 처리 과정"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":422},"id":"8BeSzXKcOwjt","executionInfo":{"status":"ok","timestamp":1662256922831,"user_tz":-540,"elapsed":625,"user":{"displayName":"정지호","userId":"16891067989582209865"}},"outputId":"99f33b6a-e2eb-42e7-f37e-0494cba339f1"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"image/png":"\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":632},"id":"3cl7PSuwvCUh","outputId":"259177e9-b4cc-404a-ec39-5eba3702167f","executionInfo":{"status":"ok","timestamp":1662257024963,"user_tz":-540,"elapsed":83300,"user":{"displayName":"정지호","userId":"16891067989582209865"}}},"source":["from keras.models import load_model\n","\n","history = model.fit([train.new_movieId, train.userId], train.rating, epochs=10, verbose=1) # fit으로 훈련시작! \n","model.save(r'recommender_model.h5')\n","plt.plot(history.history['loss'])\n","plt.xlabel = ('Epochs') # 반복수\n","plt.ylabel = (\"Training_Error\") # 훈련 오류\n","# => RMSE가 점점 작아지고 있음 (0.6912까지 줄어듦. SVD 모델로 만들었을 때는 대략 0.9였음.)"],"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","2501/2501 [==============================] - 7s 2ms/step - loss: 3.3171\n","Epoch 2/10\n","2501/2501 [==============================] - 5s 2ms/step - loss: 1.9209\n","Epoch 3/10\n","2501/2501 [==============================] - 5s 2ms/step - loss: 1.2565\n","Epoch 4/10\n","2501/2501 [==============================] - 5s 2ms/step - loss: 0.9957\n","Epoch 5/10\n","2501/2501 [==============================] - 4s 2ms/step - loss: 0.8707\n","Epoch 6/10\n","2501/2501 [==============================] - 4s 2ms/step - loss: 0.8011\n","Epoch 7/10\n","2501/2501 [==============================] - 4s 2ms/step - loss: 0.7590\n","Epoch 8/10\n","2501/2501 [==============================] - 4s 2ms/step - loss: 0.7293\n","Epoch 9/10\n","2501/2501 [==============================] - 4s 2ms/step - loss: 0.7079\n","Epoch 10/10\n","2501/2501 [==============================] - 4s 2ms/step - loss: 0.6912\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"0K7Ya-aYvH-q","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1662257104573,"user_tz":-540,"elapsed":1641,"user":{"displayName":"정지호","userId":"16891067989582209865"}},"outputId":"380ea166-1560-403f-cfa4-c954cc515020"},"source":["model.evaluate([test.new_movieId, test.userId], test.rating)\n","# loss == 0.81 (RMSE 기준으로 ㄱㅊ)"],"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["626/626 [==============================] - 1s 1ms/step - loss: 0.8100\n"]},{"output_type":"execute_result","data":{"text/plain":["0.8100135326385498"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","metadata":{"id":"NT660eCjvLMU","executionInfo":{"status":"ok","timestamp":1662257162670,"user_tz":-540,"elapsed":4,"user":{"displayName":"정지호","userId":"16891067989582209865"}}},"source":["predictions = model.predict([test.new_movieId.head(8), test.userId.head(8)])"],"execution_count":24,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fHL_mm8yvQQT","outputId":"4ba402ad-9929-49ab-f57e-b2ab11e94797","executionInfo":{"status":"ok","timestamp":1662257174620,"user_tz":-540,"elapsed":7,"user":{"displayName":"정지호","userId":"16891067989582209865"}}},"source":["print(predictions)"],"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["[[4.841093  ]\n"," [0.13455828]\n"," [3.455086  ]\n"," [3.6036675 ]\n"," [3.2611382 ]\n"," [4.1640925 ]\n"," [3.6577482 ]\n"," [0.05163774]]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GBvnP12BvTnP","outputId":"6dd65fe9-d7a3-4d7b-d8df-4f82eb221be4","executionInfo":{"status":"ok","timestamp":1662257220448,"user_tz":-540,"elapsed":2,"user":{"displayName":"정지호","userId":"16891067989582209865"}}},"source":["for i in range(0,8):\n","  print(predictions[i], test.rating.iloc[i]) # 예측 평점과 실제 평점 비교!\n","  # => 비슷한게 많음.. 마지막게 좀 많이 차이나지만 이 정도면 ㄱㅊ음. "],"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["[4.841093] 5.0\n","[0.13455828] 1.0\n","[3.455086] 3.0\n","[3.6036675] 4.0\n","[3.2611382] 4.0\n","[4.1640925] 5.0\n","[3.6577482] 5.0\n","[0.05163774] 4.0\n"]}]}]}